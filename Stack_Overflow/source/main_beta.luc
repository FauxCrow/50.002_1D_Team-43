module main_beta (
    input p1_button,
    //input p2_button,
    
    input clk,  // clock
    input rst,  // reset
    
    output debug_out[32],
    output p1_out[32],
    //output p2_out[16],
    output debug_slowclock,
   
    output decimal_counter_increase,
    output decimal_counter_rst
  ) {
  
  //temp variables
  sig inputAlu_a[32];
  sig inputAlu_b[32];
  
  alu game_alu;

  .clk(clk){
    edge_detector game_timer_detector(#RISE(1), #FALL(0));
    
    .rst(rst){
      main_control_unit main_control_unit;
      main_reg_files players;
      
      counter slow_timer(#SIZE(1),#DIV(26)); 

    }
  }
  always {
    
    //edge detectors
    game_timer_detector.in = slow_timer.value; // 30 second timer detector
    
    //pass timer and counter signals to CU unit 
    main_control_unit.decrease_timer = game_timer_detector.out;
    
    //pass button press signal to CU unit
    main_control_unit.p1_button = p1_button;
    //main_control_unit.p2_button = p2_button;
    
    //output of CU to increase 7segment
    decimal_counter_increase = main_control_unit.decimal_counter_increase;
    decimal_counter_rst = main_control_unit.decimal_counter_rst;
    
    //Setup REGFILE unit 
    players.we = main_control_unit.we_regfile;
    players.write_address = main_control_unit.regfile_write_address;
   
    players.read_address_a = main_control_unit.regfile_read_address_a;
    players.read_address_b = main_control_unit.regfile_read_address_b;
    
    //bootstrap reg_b output to CU for convenient branching conditions
    main_control_unit.regfile_datain = players.out_b;
    
    //asel mux
    case(main_control_unit.asel){
      b00  : inputAlu_a = players.out_a;
      //b01  : inputAlu_a = 1; 
      //b11  : inputAlu_a = 30;
      default : //b10 unused
          inputAlu_a = 0;
    }
    
    //bsel mux
    case(main_control_unit.bsel){
      b00 : inputAlu_b = players.out_b;
      //b01 : inputAlu_b = 1;
      //b11 : inputAlu_b = 3;
      //b10 : inputAlu_b = 0;
      default: //necessary to init
          inputAlu_b = 0;
      
    }
    
    //ALU
    game_alu.a = inputAlu_a;
    game_alu.b = inputAlu_b;
    game_alu.alufn = main_control_unit.alufn;
   
    
    //wdsel mux
    case (main_control_unit.alu_out_sel){
      b01 : players.data = b1111111111111111;
      b10 : players.data = b0000000000001111;
      b11 : players.data = 0;
      default : //b00
          players.data = game_alu.out;
    }
    
    //for debugging
  //  debug_out[3:0] = players.all_buttons;
  //  debug_out[7:4] = players.out;    
  //  debug_out = game_controlunit.debug;
    
    debug_out = players.timer;
 //   debug_out = vc.debug;
    p1_out = players.row;
    //p2_out = players.all_scores[31:16];
    debug_slowclock = slow_timer.value;
  }
}