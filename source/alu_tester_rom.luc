module alu_tester_rom (
    input address[6],
    output a[32],
    output b[32],
    output alufn[6],
    output value[32]
) {
    // implement stored expected values for each test case for each operation
    const A_VALUE = {b00000000000000000000000000000001, b00000000000000000000000000000000, 
        b00000000000000000000000000000010, b00000000000000000000000000000010}
    const B_VALUE = {b00000000000000000000000000000000, b00000000000000000000000000000001, 
        b00000000000000000000000000000011, b00000000000000000000000000000010}
    const ALUFN_VALUE = {b000000, b000000, b000000, b000000}
    const EXPECTED_VALUE = {b00000000000000000000000000000001, b00000000000000000000000000000001, 
        b00000000000000000000000000000000, b00000000000000000000000000000000}
    
    always {        
        case (address){
            b000000:
                a = A_VALUE[0]
                b = B_VALUE[0]
                alufn = ALUFN_VALUE[0]
                value = EXPECTED_VALUE[0]
            b000001:
                a = A_VALUE[1]
                b = B_VALUE[1]
                alufn = ALUFN_VALUE[1]
                value = EXPECTED_VALUE[1]
            b000010:
                a = A_VALUE[2]
                b = B_VALUE[2]
                alufn = ALUFN_VALUE[2]
                value = EXPECTED_VALUE[2]
            b000011:
                a = A_VALUE[3]
                b = B_VALUE[3]
                alufn = ALUFN_VALUE[3]
                value = EXPECTED_VALUE[3]
            
            default:
                a = 32x{0}
                b = 32x{0}
                alufn = 6x{0}
                value = 32x{0}
        }
    }
}